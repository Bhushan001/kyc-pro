version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: ekyc-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ekyc_platform}
      POSTGRES_USER: ${POSTGRES_USER:-saas_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-saas_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init-keycloak-db.sql:/docker-entrypoint-initdb.d/1-init-keycloak-db.sql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/2-schema.sql
      - ./database/seed-data.sql:/docker-entrypoint-initdb.d/3-seed-data.sql
    networks:
      - ekyc-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-saas_user} -d ${POSTGRES_DB:-ekyc_platform}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Keycloak Identity and Access Management
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: ekyc-keycloak
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin123}
      KC_DB: ${KC_DB:-postgres}
      KC_DB_URL: ${KC_DB_URL:-jdbc:postgresql://postgres:5432/keycloak?currentSchema=public}
      KC_DB_USERNAME: ${KC_DB_USERNAME:-saas_user}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD:-saas_password}
      KC_HOSTNAME_STRICT: ${KC_HOSTNAME_STRICT:-false}
      KC_HOSTNAME_STRICT_HTTPS: ${KC_HOSTNAME_STRICT_HTTPS:-false}
      KC_HTTP_ENABLED: ${KC_HTTP_ENABLED:-true}
      KC_HEALTH_ENABLED: ${KC_HEALTH_ENABLED:-true}
      KC_METRICS_ENABLED: ${KC_METRICS_ENABLED:-true}
      KC_LOG_LEVEL: ${KC_LOG_LEVEL:-INFO}
    ports:
      - "${KEYCLOAK_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ekyc-network
    restart: unless-stopped
    command: start-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Eureka Server
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: ekyc-eureka-server
    ports:
      - "8761:8761"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFERIPADDRESS: true
    networks:
      - ekyc-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: ekyc-api-gateway
    ports:
      - "9080:9080"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFERIPADDRESS: true
    depends_on:
      - eureka-server
    networks:
      - ekyc-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Auth Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: ekyc-auth-service
    ports:
      - "9081:9081"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFERIPADDRESS: true
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ekyc_platform
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-saas_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-saas_password}
    depends_on:
      - eureka-server
      - postgres
    networks:
      - ekyc-network
    restart: unless-stopped

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: ekyc-user-service
    ports:
      - "9082:9082"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFERIPADDRESS: true
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ekyc_platform
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-saas_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-saas_password}
    depends_on:
      - eureka-server
      - postgres
    networks:
      - ekyc-network
    restart: unless-stopped

  # Tenant Service
  tenant-service:
    build:
      context: ./tenant-service
      dockerfile: Dockerfile
    container_name: ekyc-tenant-service
    ports:
      - "9083:9083"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFERIPADDRESS: true
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ekyc_platform
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-saas_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-saas_password}
    depends_on:
      - eureka-server
      - postgres
    networks:
      - ekyc-network
    restart: unless-stopped

  # Module Service
  module-service:
    build:
      context: ./module-service
      dockerfile: Dockerfile
    container_name: ekyc-module-service
    ports:
      - "9084:9084"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFERIPADDRESS: true
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ekyc_platform
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-saas_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-saas_password}
    depends_on:
      - eureka-server
      - postgres
    networks:
      - ekyc-network
    restart: unless-stopped

  # Subscription Service
  subscription-service:
    build:
      context: ./subscription-service
      dockerfile: Dockerfile
    container_name: ekyc-subscription-service
    ports:
      - "9085:9085"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFERIPADDRESS: true
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ekyc_platform
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-saas_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-saas_password}
    depends_on:
      - eureka-server
      - postgres
    networks:
      - ekyc-network
    restart: unless-stopped

  # Registry Service
  registry-service:
    build:
      context: ./registry-service
      dockerfile: Dockerfile
    container_name: ekyc-registry-service
    ports:
      - "9086:9086"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFERIPADDRESS: true
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ekyc_platform
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-saas_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-saas_password}
    depends_on:
      - eureka-server
      - postgres
    networks:
      - ekyc-network
    restart: unless-stopped

  # Keycloak Sync Service
  keycloak-sync-service:
    build:
      context: ./keycloak-sync-service
      dockerfile: Dockerfile
    container_name: ekyc-keycloak-sync-service
    ports:
      - "9087:9087"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFERIPADDRESS: true
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ekyc_platform
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-saas_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-saas_password}
    depends_on:
      - eureka-server
      - postgres
      - keycloak
    networks:
      - ekyc-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  ekyc-network:
    driver: bridge
